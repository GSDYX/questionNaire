<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="naire.mapper.NaireMapper" >
  <resultMap id="BaseResultMap" type="naire.pojo.Naire" >
    <id column="naireid" property="naireid" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="times" property="times" jdbcType="INTEGER" />
    <result column="relax" property="relax" jdbcType="INTEGER" />
    <result column="attract" property="attract" jdbcType="CHAR" />
    <result column="hours" property="hours" jdbcType="INTEGER" />
    <result column="pressure" property="pressure" jdbcType="INTEGER" />
    <result column="vent" property="vent" jdbcType="INTEGER" />
    <result column="confidence" property="confidence" jdbcType="INTEGER" />
    <result column="lonely" property="lonely" jdbcType="INTEGER" />
    <result column="forecast" property="forecast" jdbcType="INTEGER" />
    <result column="stop" property="stop" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    naireid, sex, grade, times, relax, attract, hours, pressure, vent, confidence, lonely, 
    forecast, stop
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="naire.pojo.NaireExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from naire
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from naire
    where naireid = #{naireid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from naire
    where naireid = #{naireid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="naire.pojo.NaireExample" >
    delete from naire
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="naire.pojo.Naire" >
    insert into naire (naireid, sex, grade, 
      times, relax, attract, 
      hours, pressure, vent, 
      confidence, lonely, forecast, 
      stop)
    values (#{naireid,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, 
      #{times,jdbcType=INTEGER}, #{relax,jdbcType=INTEGER}, #{attract,jdbcType=CHAR}, 
      #{hours,jdbcType=INTEGER}, #{pressure,jdbcType=INTEGER}, #{vent,jdbcType=INTEGER}, 
      #{confidence,jdbcType=INTEGER}, #{lonely,jdbcType=INTEGER}, #{forecast,jdbcType=INTEGER}, 
      #{stop,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="naire.pojo.Naire" >
    insert into naire
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="naireid != null" >
        naireid,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="relax != null" >
        relax,
      </if>
      <if test="attract != null" >
        attract,
      </if>
      <if test="hours != null" >
        hours,
      </if>
      <if test="pressure != null" >
        pressure,
      </if>
      <if test="vent != null" >
        vent,
      </if>
      <if test="confidence != null" >
        confidence,
      </if>
      <if test="lonely != null" >
        lonely,
      </if>
      <if test="forecast != null" >
        forecast,
      </if>
      <if test="stop != null" >
        stop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="naireid != null" >
        #{naireid,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="times != null" >
        #{times,jdbcType=INTEGER},
      </if>
      <if test="relax != null" >
        #{relax,jdbcType=INTEGER},
      </if>
      <if test="attract != null" >
        #{attract,jdbcType=CHAR},
      </if>
      <if test="hours != null" >
        #{hours,jdbcType=INTEGER},
      </if>
      <if test="pressure != null" >
        #{pressure,jdbcType=INTEGER},
      </if>
      <if test="vent != null" >
        #{vent,jdbcType=INTEGER},
      </if>
      <if test="confidence != null" >
        #{confidence,jdbcType=INTEGER},
      </if>
      <if test="lonely != null" >
        #{lonely,jdbcType=INTEGER},
      </if>
      <if test="forecast != null" >
        #{forecast,jdbcType=INTEGER},
      </if>
      <if test="stop != null" >
        #{stop,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="naire.pojo.NaireExample" resultType="java.lang.Integer" >
    select count(*) from naire
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update naire
    <set >
      <if test="record.naireid != null" >
        naireid = #{record.naireid,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=INTEGER},
      </if>
      <if test="record.relax != null" >
        relax = #{record.relax,jdbcType=INTEGER},
      </if>
      <if test="record.attract != null" >
        attract = #{record.attract,jdbcType=CHAR},
      </if>
      <if test="record.hours != null" >
        hours = #{record.hours,jdbcType=INTEGER},
      </if>
      <if test="record.pressure != null" >
        pressure = #{record.pressure,jdbcType=INTEGER},
      </if>
      <if test="record.vent != null" >
        vent = #{record.vent,jdbcType=INTEGER},
      </if>
      <if test="record.confidence != null" >
        confidence = #{record.confidence,jdbcType=INTEGER},
      </if>
      <if test="record.lonely != null" >
        lonely = #{record.lonely,jdbcType=INTEGER},
      </if>
      <if test="record.forecast != null" >
        forecast = #{record.forecast,jdbcType=INTEGER},
      </if>
      <if test="record.stop != null" >
        stop = #{record.stop,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update naire
    set naireid = #{record.naireid,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER},
      times = #{record.times,jdbcType=INTEGER},
      relax = #{record.relax,jdbcType=INTEGER},
      attract = #{record.attract,jdbcType=CHAR},
      hours = #{record.hours,jdbcType=INTEGER},
      pressure = #{record.pressure,jdbcType=INTEGER},
      vent = #{record.vent,jdbcType=INTEGER},
      confidence = #{record.confidence,jdbcType=INTEGER},
      lonely = #{record.lonely,jdbcType=INTEGER},
      forecast = #{record.forecast,jdbcType=INTEGER},
      stop = #{record.stop,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="naire.pojo.Naire" >
    update naire
    <set >
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="relax != null" >
        relax = #{relax,jdbcType=INTEGER},
      </if>
      <if test="attract != null" >
        attract = #{attract,jdbcType=CHAR},
      </if>
      <if test="hours != null" >
        hours = #{hours,jdbcType=INTEGER},
      </if>
      <if test="pressure != null" >
        pressure = #{pressure,jdbcType=INTEGER},
      </if>
      <if test="vent != null" >
        vent = #{vent,jdbcType=INTEGER},
      </if>
      <if test="confidence != null" >
        confidence = #{confidence,jdbcType=INTEGER},
      </if>
      <if test="lonely != null" >
        lonely = #{lonely,jdbcType=INTEGER},
      </if>
      <if test="forecast != null" >
        forecast = #{forecast,jdbcType=INTEGER},
      </if>
      <if test="stop != null" >
        stop = #{stop,jdbcType=CHAR},
      </if>
    </set>
    where naireid = #{naireid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="naire.pojo.Naire" >
    update naire
    set sex = #{sex,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      times = #{times,jdbcType=INTEGER},
      relax = #{relax,jdbcType=INTEGER},
      attract = #{attract,jdbcType=CHAR},
      hours = #{hours,jdbcType=INTEGER},
      pressure = #{pressure,jdbcType=INTEGER},
      vent = #{vent,jdbcType=INTEGER},
      confidence = #{confidence,jdbcType=INTEGER},
      lonely = #{lonely,jdbcType=INTEGER},
      forecast = #{forecast,jdbcType=INTEGER},
      stop = #{stop,jdbcType=CHAR}
    where naireid = #{naireid,jdbcType=INTEGER}
  </update>
</mapper>